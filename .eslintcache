[{"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\index.js":"1","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\App.js":"2","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\config.js":"4","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\Routes.js":"5","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\libs\\contextLib.js":"6","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\containers\\FAQ.js":"7","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\containers\\Home.js":"8","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\containers\\Results.js":"9","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\containers\\About.js":"10","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\libs\\scryfall.js":"11","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\libs\\errorLib.js":"12","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\libs\\similarityLib.js":"13","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\libs\\filtersLib.js":"14","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\Header.js":"15","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\SearchResults.js":"16","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\FAQUnit.js":"17","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\SearchBar.js":"18","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\Footer.js":"19","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\CardDisplay.js":"20","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\Filters.js":"21","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\AlertMessage.js":"22","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\LoaderButton.js":"23","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\filters\\TypeFilter.js":"24","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\filters\\ManaCostFilter.js":"25","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\filters\\FormatFilter.js":"26","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\filters\\ColorFilter.js":"27","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\libs\\magicLib.js":"28"},{"size":942,"mtime":1612025838710,"results":"29","hashOfConfig":"30"},{"size":1720,"mtime":1612025838675,"results":"31","hashOfConfig":"30"},{"size":375,"mtime":1612025838711,"results":"32","hashOfConfig":"30"},{"size":498,"mtime":1612034735397,"results":"33","hashOfConfig":"30"},{"size":739,"mtime":1612025838675,"results":"34","hashOfConfig":"30"},{"size":174,"mtime":1612025838711,"results":"35","hashOfConfig":"30"},{"size":3818,"mtime":1612025838708,"results":"36","hashOfConfig":"30"},{"size":3606,"mtime":1612034583186,"results":"37","hashOfConfig":"30"},{"size":6018,"mtime":1612044092466,"results":"38","hashOfConfig":"30"},{"size":3029,"mtime":1612025838707,"results":"39","hashOfConfig":"30"},{"size":110,"mtime":1612025838711,"results":"40","hashOfConfig":"30"},{"size":199,"mtime":1612025838711,"results":"41","hashOfConfig":"30"},{"size":182,"mtime":1612025838711,"results":"42","hashOfConfig":"30"},{"size":2118,"mtime":1612025838711,"results":"43","hashOfConfig":"30"},{"size":752,"mtime":1612025838691,"results":"44","hashOfConfig":"30"},{"size":1712,"mtime":1612026675397,"results":"45","hashOfConfig":"30"},{"size":835,"mtime":1612025838691,"results":"46","hashOfConfig":"30"},{"size":971,"mtime":1612025838691,"results":"47","hashOfConfig":"30"},{"size":1473,"mtime":1612025838691,"results":"48","hashOfConfig":"30"},{"size":1407,"mtime":1612026518567,"results":"49","hashOfConfig":"30"},{"size":5379,"mtime":1612025838691,"results":"50","hashOfConfig":"30"},{"size":1048,"mtime":1612025838691,"results":"51","hashOfConfig":"30"},{"size":511,"mtime":1612025838691,"results":"52","hashOfConfig":"30"},{"size":1301,"mtime":1612025838691,"results":"53","hashOfConfig":"30"},{"size":1221,"mtime":1612025838691,"results":"54","hashOfConfig":"30"},{"size":1307,"mtime":1612025838691,"results":"55","hashOfConfig":"30"},{"size":1119,"mtime":1612025838691,"results":"56","hashOfConfig":"30"},{"size":483,"mtime":1612037437767,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"tq34zd",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\index.js",[],["121","122"],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\App.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\config.js",["123"],"const dev = {\r\n  apiGateway: {\r\n    REGION: 'us-east-1',\r\n    URL: \"https://38axjswipg.execute-api.us-east-1.amazonaws.com/dev\",\r\n  }\r\n};\r\n\r\nconst prod = {\r\n  apiGateway: {\r\n    REGION: 'us-east-1',\r\n    URL: \"https://6igea4twhh.execute-api.us-east-1.amazonaws.com/prod\",\r\n  }\r\n};\r\n\r\n// Default to dev if not set\r\nconst config = process.env.REACT_APP_STAGE === 'prod'\r\n  ? prod\r\n  : dev;\r\n\r\nexport default {\r\n  // Add common config values here\r\n  // MAX_ATTACHMENT_SIZE: 5000000,\r\n  ...config\r\n};\r\n","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\Routes.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\libs\\contextLib.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\containers\\FAQ.js",["124"],"import React from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport FAQUnit from \"../components/FAQUnit\";\r\nimport \"./Home.css\";\r\n\r\n\r\nexport default function About() {\r\n  let meta = {\r\n    'title': 'MagicML - FAQ',\r\n    'keywords': \"Magic: The Gathering, MTG, MTG Arena, Magic Card Search, Magic Cards\",\r\n    'description': \"Magic: The Gathering card search powered by Natural Language Processing\"\r\n  };\r\n\r\n  let faqs = [\r\n    {\r\n      q: \"What is this?\",\r\n      a: [\r\n        `This is a textual semantic similarity search tool for Magic cards.\r\n          It retrieves cards that have similar meaning in their text.`\r\n      ]\r\n    },\r\n    {\r\n      q: \"How does it work?\",\r\n      a: [\r\n        \"First: search for a card you want to find similar cards for.\",\r\n        `Then: select the card you're looking for, and MagicML will return\r\n        the top 25 most similar cards.`,\r\n        `Then: use the filters, if you want.`\r\n      ]\r\n    },\r\n    {\r\n      q: \"Yeah, but how does it work?\",\r\n      a: [\r\n        `Oh. It uses a neural network language model to transform the card text\r\n        into a high dimensional vector, encoding the semantic meaning of\r\n        the text. It then uses the normalized euclidean distance between card\r\n        vectors as a measure of similarity.`\r\n      ]\r\n    },\r\n    {\r\n      q: \"Where do you get your card data?\",\r\n      a: [\r\n        `The card data comes from MTGJSON.`,\r\n        `The basic card search uses the Scryfall API (the card to find similarities for).`,\r\n        `The similarity search is MagicML.`\r\n      ]\r\n    },\r\n    {\r\n      q: \"Does MagicML have similarities for every Magic Card?\",\r\n      a: [\r\n        `Not yet. At the moment, it only contains cards present in MTG Arena.\r\n        But, the rest of the cards will be added soon.`\r\n      ]\r\n    },\r\n    {\r\n      q: \"How are the search results sorted?\",\r\n      a: [\r\n        `They're sorted from most similar to least similar.`\r\n      ]\r\n    },\r\n    {\r\n      q: \"Why don't some of these cards seem that similar to the searched card?\",\r\n      a: [\r\n        `Well, the language model can be improved (and it will be soon).\r\n        Also, some cards are actually fairly unique, and there just isn't a\r\n        very similar card. So, you're seeing the MOST similar, which doesn't\r\n        necessarily mean it's actually similar :(`\r\n      ]\r\n    },\r\n    {\r\n      q: \"Can you add this feature?\",\r\n      a: [\r\n        `Sure, maybe. Email me at ledger@magicml.com.`,\r\n        `I'll provide a more structured way to handle these soon.`\r\n      ]\r\n    },\r\n    {\r\n      q: \"Can you fix this bug?\",\r\n      a: [\r\n        `Sure. Thanks for letting me know. Email me at ledger@magicml.com`,\r\n        `I'll provide a more structured way to handle these soon.`\r\n      ]\r\n    },\r\n    {\r\n      q: \"What's your MTG Arena rank?\",\r\n      a: [\r\n        `Uhh... nothing special :|... like Diamond 2 or 3.`\r\n      ]\r\n    },\r\n    {\r\n      q: \"Can I challenge you on MTG Arena?\",\r\n      a: [\r\n        `Sure.  lw2134#69223`\r\n      ]\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n          <title>{meta.title}</title>\r\n          <meta name=\"keywords\" content={meta.keywords}/>\r\n          <meta name=\"description\" content={meta.description}/>\r\n          <link rel=\"canonical\" href=\"https://magicml.com/faq\" />\r\n      </Helmet>\r\n      <div className=\"BasicPage\">\r\n        <Header>\r\n        </Header>\r\n        <div className=\"HomePageTitle\">\r\n          <h2>FAQ</h2>\r\n        </div>\r\n        <div className=\"BasicText\">\r\n          <div className=\"FAQ container\">\r\n            <FAQUnit faqs={faqs}></FAQUnit>\r\n          </div> \r\n        </div>\r\n      </div>\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n}","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\containers\\Home.js",["125","126","127"],"import React from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport SearchResults from \"../components/SearchResults\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\nimport { supportedSets } from \"../libs/magicLib\";\r\nimport Scryfall from \"../libs/scryfall\";\r\nimport \"./Home.css\";\r\n\r\nexport default function Home() {\r\n  let meta = {\r\n    'title': 'MagicML',\r\n    'keywords': \"Magic: The Gathering, MTG, MTG Arena, Magic Card Search, Magic Cards\",\r\n    'description': \"Magic: The Gathering card search powered by Natural Language Processing\"\r\n  };\r\n  let title = \"MagicML\";\r\n  const nCardsPerRow = 4;\r\n\r\n  const {\r\n    isLoading, setIsLoading,\r\n    showAlert, setShowAlert,\r\n    formCard, setFormCard,\r\n    scryfallCards, setScryfallCards\r\n  } = useAppContext();\r\n\r\n\r\n  // Scryfall Search\r\n  function validateForm() {\r\n    return formCard.length > 0;\r\n  }\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    setShowAlert(false);\r\n    setIsLoading(true);\r\n  \r\n    try {\r\n      const res = await Scryfall.get(`search?q=${formCard}`);\r\n      var { data } = res.data;\r\n      // only show cards in Arena\r\n      data = data.map(card => {\r\n        if (supportedSets.some(s => card.set_name.includes(s))) {\r\n          return card\r\n        }\r\n      }).filter(el => el != null);\r\n\r\n      if (data.length == 0) {\r\n        setShowAlert(true);\r\n      }\r\n      \r\n      if (data.length == 0) {\r\n        setShowAlert(true);\r\n      }\r\n\r\n      setScryfallCards(data)\r\n      setIsLoading(false);\r\n    } catch (e) {\r\n      setShowAlert(true);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n          <title>{meta.title}</title>\r\n          <meta name=\"keywords\" content={meta.keywords}/>\r\n          <meta name=\"description\" content={meta.description}/>\r\n          <link rel=\"canonical\" href=\"https://magicml.com\" />\r\n          <meta property=\"og:type\" content=\"website\"></meta>\r\n          <meta name=\"twitter:card\" content=\"summary_large_image\"></meta>\r\n          <meta name=\"twitter:site\" content=\"@magicml2\"></meta>\r\n          <meta name=\"twitter:title\" content={meta.title}></meta>\r\n          <meta name=\"twitter:description\" content={meta.description}></meta>\r\n          <meta name=\"twitter:image\" content=\"/logo512.png\"></meta>\r\n      </Helmet>\r\n      <div class=\"HomePageMain\">\r\n        <Header></Header>\r\n        <div class=\"HomePageTitle\">\r\n          <h2>Find cards with similar functionality</h2>\r\n          <h5><b>Magic: The Gathering</b> card search powered by Natural Language Processing</h5>\r\n        </div>\r\n        <div className=\"HomeSearchBar container\">\r\n          <SearchBar\r\n            handleSubmit={handleSubmit}\r\n            isLoading={isLoading}\r\n            validateForm={validateForm}\r\n            card={formCard}\r\n            setCard={setFormCard}\r\n          />\r\n        </div>\r\n        <div className=\"HomeSearchResults\">\r\n          {scryfallCards.length > 0 &&\r\n            <div class=\"SearchHelper\">\r\n              <h2>What card do you want to find similarities for?</h2>\r\n            </div>\r\n          }\r\n          <SearchResults\r\n            isLoading={isLoading}\r\n            simCards={scryfallCards}\r\n            nCardsPerRow={nCardsPerRow}\r\n            cardOverlay={false}\r\n            showAlert={showAlert}\r\n            setShowAlert={setShowAlert}\r\n            alertType={\"No Cards Found\"}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n}","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\containers\\Results.js",["128","129","130","131"],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\containers\\About.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\libs\\scryfall.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\libs\\errorLib.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\libs\\similarityLib.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\libs\\filtersLib.js",["132","133","134","135","136","137","138","139","140"],"export function applyFilters(\r\n  filters,\r\n  simCards,\r\n  nCardResults,\r\n  setFilteredSimCards,\r\n  setIsLoading,\r\n  onError\r\n  ) {\r\n  try {\r\n    let filteredCards = simCards;\r\n    \r\n    // apply color filters\r\n    let filterColors = Object.entries(filters.colors).map(pair => {\r\n      if (pair[1]) {\r\n        return pair[0]\r\n      }\r\n    }).filter(el => el != null);\r\n\r\n    filteredCards = filteredCards.map(card => {\r\n      if (filterColors.some(c => card.colors.includes(c))) {\r\n        return card\r\n      }\r\n    }).filter(el => el != null);\r\n\r\n    // apply type filters\r\n    let filterTypes = Object.entries(filters.type).map(pair => {\r\n      if (pair[1]) {\r\n        return pair[0]\r\n      }\r\n    }).filter(el => el != null);\r\n\r\n    filteredCards = filteredCards.map(card => {\r\n      if (filterTypes.some(t => card.types.includes(t))) {\r\n        return card\r\n      }\r\n    }).filter(el => el != null);\r\n\r\n    // apply mana cost filters\r\n    let filterMana = Object.entries(filters.manaCost).map(pair => {\r\n      if (pair[1]) {\r\n        if (pair[0] === \"lt1\") {\r\n          return \"0\"\r\n        } else {\r\n          return pair[0]\r\n        }\r\n      }\r\n    }).filter(el => el != null);\r\n\r\n    filteredCards = filteredCards.map(card => {\r\n      if (filterMana.some(m => Number(m) === Number(card.convertedManaCost))) {\r\n        return card\r\n      }\r\n    }).filter(el => el != null);\r\n\r\n    // apply format filters\r\n    let filterFormat = Object.entries(filters.format).map(pair => {\r\n      if (pair[1]) {\r\n        return pair[0]\r\n      }\r\n    }).filter(el => el != null);\r\n\r\n    filteredCards = filteredCards.map(card => {\r\n      let legalFormats = Object.entries(card).map(pair => {\r\n        if (pair[1] === \"Legal\") {\r\n          return pair[0]\r\n        }\r\n      }).filter(el => el != null).join(',');\r\n      \r\n      if (filterFormat.some(f => legalFormats.includes(f))) {\r\n        return card\r\n      }\r\n    }).filter(el => el != null);\r\n\r\n    // No more filters\r\n    setFilteredSimCards(filteredCards.slice(0, nCardResults));\r\n    setIsLoading(false);\r\n  }\r\n  catch(e) {\r\n    onError(e);\r\n    setIsLoading(false);\r\n  }\r\n}","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\Header.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\SearchResults.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\FAQUnit.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\SearchBar.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\Footer.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\CardDisplay.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\Filters.js",["141"],"import React from \"react\";\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport ColorFilter from \"./filters/ColorFilter\";\r\nimport TypeFilter from \"./filters/TypeFilter\";\r\nimport ManaCostFilter from \"./filters/ManaCostFilter\";\r\nimport FormatFilter from \"./filters/FormatFilter\";\r\nimport { onError } from \"../libs/errorLib\";\r\nimport { useAppContext } from \"../libs/contextLib\";\r\n\r\nimport \"../containers/Home.css\";\r\n\r\n\r\nexport default function Filters() {\r\n  const {\r\n    filters, setFilters\r\n  } = useAppContext();\r\n\r\n  function handleFilters(id) {\r\n    let value;\r\n    \r\n    switch (`${id}`) {\r\n      // Color Filters\r\n      case 'W':\r\n        value = !filters.colors.W\r\n        setFilters({...filters, colors: {...filters.colors, W: value}});\r\n        break;\r\n      case 'B':\r\n        value = !filters.colors.B\r\n        setFilters({...filters, colors: {...filters.colors, B: value}});\r\n        break;\r\n      case 'G':\r\n        value = !filters.colors.G\r\n        setFilters({...filters, colors: {...filters.colors, G: value}});\r\n        break;\r\n      case 'U':\r\n        value = !filters.colors.U\r\n        setFilters({...filters, colors: {...filters.colors, U: value}});\r\n        break;\r\n      case 'R':\r\n        value = !filters.colors.R\r\n        setFilters({...filters, colors: {...filters.colors, R: value}});\r\n        break;\r\n      case '0':\r\n        value = !filters.colors['0']\r\n        setFilters({...filters, colors: {...filters.colors, 0: value}});\r\n        break;\r\n      // Type Filters\r\n      case 'Creature':\r\n        value = !filters.type.Creature\r\n        setFilters({...filters, type: {...filters.type, Creature: value}});\r\n        break;\r\n      case 'Planeswalker':\r\n        value = !filters.type.Planeswalker\r\n        setFilters({...filters, type: {...filters.type, Planeswalker: value}});\r\n        break;\r\n      case 'Instant':\r\n        value = !filters.type.Instant\r\n        setFilters({...filters, type: {...filters.type, Instant: value}});\r\n        break;\r\n      case 'Sorcery':\r\n        value = !filters.type.Sorcery\r\n        setFilters({...filters, type: {...filters.type, Sorcery: value}});\r\n        break;\r\n      case 'Enchantment':\r\n        value = !filters.type.Enchantment\r\n        setFilters({...filters, type: {...filters.type, Enchantment: value}});\r\n        break;\r\n      case 'Artifact':\r\n        value = !filters.type.Artifact\r\n        setFilters({...filters, type: {...filters.type, Artifact: value}});\r\n        break;\r\n      case 'Land':\r\n        value = !filters.type.Land\r\n        setFilters({...filters, type: {...filters.type, Land: value}});\r\n        break;\r\n      // Mana Cost Filters\r\n      case 'lt1':\r\n        value = !filters.manaCost.lt1\r\n        setFilters({...filters, manaCost: {...filters.manaCost, lt1: value}});\r\n        break;\r\n      case '1':\r\n        value = !filters.manaCost['1']\r\n        setFilters({...filters, manaCost: {...filters.manaCost, 1: value}});\r\n        break;\r\n      case '2':\r\n        value = !filters.manaCost['2']\r\n        setFilters({...filters, manaCost: {...filters.manaCost, 2: value}});\r\n        break;\r\n      case '3':\r\n        value = !filters.manaCost['3']\r\n        setFilters({...filters, manaCost: {...filters.manaCost, 3: value}});\r\n        break;\r\n      case '4':\r\n        value = !filters.manaCost['4']\r\n        setFilters({...filters, manaCost: {...filters.manaCost, 4: value}});\r\n        break;\r\n      case '5':\r\n        value = !filters.manaCost['5']\r\n        setFilters({...filters, manaCost: {...filters.manaCost, 5: value}});\r\n        break;\r\n      case '6':\r\n        value = !filters.manaCost['6']\r\n        setFilters({...filters, manaCost: {...filters.manaCost, 6: value}});\r\n        break;\r\n      // Format Filters\r\n      case 'standard':\r\n        value = !filters.format.standard\r\n        setFilters({...filters, format: {...filters.format, standard: value}});\r\n        break;\r\n      case 'historic':\r\n        value = !filters.format.historic\r\n        setFilters({...filters, format: {...filters.format, historic: value}});\r\n        break;\r\n      case 'brawl':\r\n        value = !filters.format.brawl\r\n        setFilters({...filters, format: {...filters.format, brawl: value}});\r\n        break;\r\n      case 'commander':\r\n        value = !filters.format.commander\r\n        setFilters({...filters, format: {...filters.format, commander: value}});\r\n        break;\r\n      case 'pauper':\r\n        value = !filters.format.pauper\r\n        setFilters({...filters, format: {...filters.format, pauper: value}});\r\n        break;\r\n      case 'oldschool':\r\n        value = !filters.format.oldschool\r\n        setFilters({...filters, format: {...filters.format, oldschool: value}});\r\n        break;\r\n      case 'modern':\r\n        value = !filters.format.modern\r\n        setFilters({...filters, format: {...filters.format, modern: value}});\r\n        break;\r\n      default:\r\n        console.log(filters);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row className=\"Filters justify-content-md-center\">\r\n      <Col sm={3}>\r\n        <ColorFilter handleFilters={handleFilters}/>\r\n      </Col>\r\n      <Col sm={3}>\r\n        <TypeFilter handleFilters={handleFilters}/>\r\n      </Col>\r\n      <Col sm={3}>\r\n        <ManaCostFilter handleFilters={handleFilters}/>\r\n      </Col>\r\n      <Col sm={3}>\r\n        <FormatFilter handleFilters={handleFilters}/>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\AlertMessage.js",["142"],"import React from \"react\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport \"../containers/Home.css\";\r\n\r\nexport default function AlertMessage(props) {\r\n  let { alertType, setShowAlert } = props;\r\n  let heading = \"\";\r\n  let text = [];\r\n\r\n  switch (alertType) {\r\n    case \"No Cards Found\":\r\n      heading = alertType;\r\n      text = [\r\n        \"Oh... At the moment, we only have cards that are in MTG Arena. Try one of those :) (The rest are coming soon)\",\r\n        \"Try any word or part of a word that appears in the name of a card.\"\r\n      ];\r\n      break;\r\n    case \"No similarities for that card yet :(\":\r\n      heading = alertType;\r\n      text = [\r\n        \"We currently only have similarities for cards present in MTG Arena. But we'll be adding more cards soon.\"\r\n      ]\r\n  }\r\n\r\n  return (\r\n    <Alert variant=\"danger\" dismissible onClose={() => setShowAlert(false)}>\r\n      <Alert.Heading>{heading}</Alert.Heading>\r\n      {\r\n        text.map((t) => \r\n          <p>\r\n            {t}\r\n          </p>\r\n        )\r\n      }\r\n    </Alert>\r\n  );\r\n}","C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\LoaderButton.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\filters\\TypeFilter.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\filters\\ManaCostFilter.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\filters\\FormatFilter.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\components\\filters\\ColorFilter.js",[],"C:\\Users\\lwest\\Desktop\\magicml-frontend\\src\\libs\\magicLib.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":20,"column":1,"nodeType":"149","endLine":24,"endColumn":3},{"ruleId":"150","severity":1,"message":"151","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":14},{"ruleId":"154","severity":1,"message":"155","line":45,"column":28,"nodeType":"156","messageId":"157","endLine":45,"endColumn":30},{"ruleId":"158","severity":1,"message":"159","line":51,"column":23,"nodeType":"160","messageId":"161","endLine":51,"endColumn":25},{"ruleId":"158","severity":1,"message":"159","line":55,"column":23,"nodeType":"160","messageId":"161","endLine":55,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":48,"column":6,"nodeType":"164","endLine":48,"endColumn":17,"suggestions":"165"},{"ruleId":"162","severity":1,"message":"166","line":54,"column":6,"nodeType":"164","endLine":54,"endColumn":15,"suggestions":"167"},{"ruleId":"154","severity":1,"message":"155","line":94,"column":28,"nodeType":"156","messageId":"157","endLine":94,"endColumn":30},{"ruleId":"158","severity":1,"message":"159","line":100,"column":23,"nodeType":"160","messageId":"161","endLine":100,"endColumn":25},{"ruleId":"154","severity":1,"message":"155","line":13,"column":64,"nodeType":"156","messageId":"157","endLine":13,"endColumn":66},{"ruleId":"154","severity":1,"message":"155","line":19,"column":44,"nodeType":"156","messageId":"157","endLine":19,"endColumn":46},{"ruleId":"154","severity":1,"message":"155","line":26,"column":61,"nodeType":"156","messageId":"157","endLine":26,"endColumn":63},{"ruleId":"154","severity":1,"message":"155","line":32,"column":44,"nodeType":"156","messageId":"157","endLine":32,"endColumn":46},{"ruleId":"154","severity":1,"message":"155","line":39,"column":64,"nodeType":"156","messageId":"157","endLine":39,"endColumn":66},{"ruleId":"154","severity":1,"message":"155","line":49,"column":44,"nodeType":"156","messageId":"157","endLine":49,"endColumn":46},{"ruleId":"154","severity":1,"message":"155","line":56,"column":64,"nodeType":"156","messageId":"157","endLine":56,"endColumn":66},{"ruleId":"154","severity":1,"message":"155","line":62,"column":44,"nodeType":"156","messageId":"157","endLine":62,"endColumn":46},{"ruleId":"154","severity":1,"message":"155","line":63,"column":56,"nodeType":"156","messageId":"157","endLine":63,"endColumn":58},{"ruleId":"150","severity":1,"message":"168","line":10,"column":10,"nodeType":"152","messageId":"153","endLine":10,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":10,"column":3,"nodeType":"171","messageId":"172","endLine":23,"endColumn":4},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'newSimSearch' and 'setIsLoading'. Either include them or remove the dependency array.","ArrayExpression",["175"],"React Hook useEffect has missing dependencies: 'setFilteredSimCards', 'setIsLoading', and 'simCards'. Either include them or remove the dependency array.",["176"],"'onError' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [nameParam, newSimSearch, setIsLoading]",{"range":"181","text":"182"},"Update the dependencies array to be: [filters, setFilteredSimCards, setIsLoading, simCards]",{"range":"183","text":"184"},[1508,1519],"[nameParam, newSimSearch, setIsLoading]",[1674,1683],"[filters, setFilteredSimCards, setIsLoading, simCards]"]